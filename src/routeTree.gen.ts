/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInImport } from './routes/sign-in'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as ResumeonlyIdImport } from './routes/resume_only.$id'
import { Route as BuilderIdImport } from './routes/builder.$id'

// Create/Update Routes

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ResumeonlyIdRoute = ResumeonlyIdImport.update({
  id: '/resume_only/$id',
  path: '/resume_only/$id',
  getParentRoute: () => rootRoute,
} as any)

const BuilderIdRoute = BuilderIdImport.update({
  id: '/builder/$id',
  path: '/builder/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/builder/$id': {
      id: '/builder/$id'
      path: '/builder/$id'
      fullPath: '/builder/$id'
      preLoaderRoute: typeof BuilderIdImport
      parentRoute: typeof rootRoute
    }
    '/resume_only/$id': {
      id: '/resume_only/$id'
      path: '/resume_only/$id'
      fullPath: '/resume_only/$id'
      preLoaderRoute: typeof ResumeonlyIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/sign-in': typeof SignInRoute
  '/builder/$id': typeof BuilderIdRoute
  '/resume_only/$id': typeof ResumeonlyIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/sign-in': typeof SignInRoute
  '/builder/$id': typeof BuilderIdRoute
  '/resume_only/$id': typeof ResumeonlyIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/sign-in': typeof SignInRoute
  '/builder/$id': typeof BuilderIdRoute
  '/resume_only/$id': typeof ResumeonlyIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/sign-in'
    | '/builder/$id'
    | '/resume_only/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/sign-in' | '/builder/$id' | '/resume_only/$id'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/sign-in'
    | '/builder/$id'
    | '/resume_only/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  SignInRoute: typeof SignInRoute
  BuilderIdRoute: typeof BuilderIdRoute
  ResumeonlyIdRoute: typeof ResumeonlyIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  SignInRoute: SignInRoute,
  BuilderIdRoute: BuilderIdRoute,
  ResumeonlyIdRoute: ResumeonlyIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/sign-in",
        "/builder/$id",
        "/resume_only/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/builder/$id": {
      "filePath": "builder.$id.tsx"
    },
    "/resume_only/$id": {
      "filePath": "resume_only.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
