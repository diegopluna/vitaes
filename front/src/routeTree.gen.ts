/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LandingImport } from './routes/landing'
import { Route as BuilderImport } from './routes/builder'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as BuilderNewImport } from './routes/builder/new'
import { Route as BuilderResumeSlugImport } from './routes/builder/$resumeSlug'

// Create/Update Routes

const LandingRoute = LandingImport.update({
  path: '/landing',
  getParentRoute: () => rootRoute,
} as any)

const BuilderRoute = BuilderImport.update({
  path: '/builder',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BuilderNewRoute = BuilderNewImport.update({
  path: '/new',
  getParentRoute: () => BuilderRoute,
} as any)

const BuilderResumeSlugRoute = BuilderResumeSlugImport.update({
  path: '/$resumeSlug',
  getParentRoute: () => BuilderRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/builder': {
      id: '/builder'
      path: '/builder'
      fullPath: '/builder'
      preLoaderRoute: typeof BuilderImport
      parentRoute: typeof rootRoute
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/builder/$resumeSlug': {
      id: '/builder/$resumeSlug'
      path: '/$resumeSlug'
      fullPath: '/builder/$resumeSlug'
      preLoaderRoute: typeof BuilderResumeSlugImport
      parentRoute: typeof BuilderImport
    }
    '/builder/new': {
      id: '/builder/new'
      path: '/new'
      fullPath: '/builder/new'
      preLoaderRoute: typeof BuilderNewImport
      parentRoute: typeof BuilderImport
    }
  }
}

// Create and export the route tree

interface BuilderRouteChildren {
  BuilderResumeSlugRoute: typeof BuilderResumeSlugRoute
  BuilderNewRoute: typeof BuilderNewRoute
}

const BuilderRouteChildren: BuilderRouteChildren = {
  BuilderResumeSlugRoute: BuilderResumeSlugRoute,
  BuilderNewRoute: BuilderNewRoute,
}

const BuilderRouteWithChildren =
  BuilderRoute._addFileChildren(BuilderRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/builder': typeof BuilderRouteWithChildren
  '/landing': typeof LandingRoute
  '/builder/$resumeSlug': typeof BuilderResumeSlugRoute
  '/builder/new': typeof BuilderNewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/builder': typeof BuilderRouteWithChildren
  '/landing': typeof LandingRoute
  '/builder/$resumeSlug': typeof BuilderResumeSlugRoute
  '/builder/new': typeof BuilderNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/builder': typeof BuilderRouteWithChildren
  '/landing': typeof LandingRoute
  '/builder/$resumeSlug': typeof BuilderResumeSlugRoute
  '/builder/new': typeof BuilderNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/builder'
    | '/landing'
    | '/builder/$resumeSlug'
    | '/builder/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/builder'
    | '/landing'
    | '/builder/$resumeSlug'
    | '/builder/new'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/builder'
    | '/landing'
    | '/builder/$resumeSlug'
    | '/builder/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  BuilderRoute: typeof BuilderRouteWithChildren
  LandingRoute: typeof LandingRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  BuilderRoute: BuilderRouteWithChildren,
  LandingRoute: LandingRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/builder",
        "/landing"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/builder": {
      "filePath": "builder.tsx",
      "children": [
        "/builder/$resumeSlug",
        "/builder/new"
      ]
    },
    "/landing": {
      "filePath": "landing.tsx"
    },
    "/builder/$resumeSlug": {
      "filePath": "builder/$resumeSlug.tsx",
      "parent": "/builder"
    },
    "/builder/new": {
      "filePath": "builder/new.tsx",
      "parent": "/builder"
    }
  }
}
ROUTE_MANIFEST_END */
